{# Modificado para que agregar el bot√≥n para ir al listado #}

{% extends 'IndicadoresBundle::standard_layout_tablero.html.twig' %}
{% block stylesheets %}
    {{ parent() }}
<link rel="stylesheet" href="{{ asset('bundles/indicadores/css/FichaTecnicaAdmin/tablero.css') }}" type="text/css" media="all" />
<link rel="stylesheet" href="{{ asset('bundles/indicadores/js/DataTables/media/css/jquery.dataTables.css') }}" type="text/css" media="all" />
<link rel="stylesheet" href="{{ asset('bundles/indicadores/js/DataTables/media/css/TableTools.css') }}" type="text/css" media="all" />
<link rel="stylesheet" href="{{ asset('bundles/indicadores/js/bootstrap/css/summernote.css') }}" type="text/css" media="all" />
<link rel="stylesheet" href="{{ asset('bundles/indicadores/css/datepicker.css') }}" type="text/css" media="all" />
<!--EDITADO PARA NUEVAS TIPOS DE GRAFICOS (CSS)-->
    <link rel="stylesheet" href="{{ asset('bundles/indicadores/css/FichaTecnicaAdmin/gauge.css') }}" type="text/css" media="all" />
    <link rel="stylesheet" href="{{ asset('bundles/indicadores/js/handsontable/handsontable.css') }}" type="text/css" media="all" />


{% endblock %}

{% block javascripts %}
    {{ parent() }}
<script src="{{ asset('bundles/indicadores/js/d3.min.js') }}" type="text/javascript"></script>
<script src="{{ asset('bundles/indicadores/js/d3pie.js') }}" type="text/javascript"></script>
<script src="{{ asset('bundles/indicadores/js/affix.min.js') }}" type="text/javascript"></script>

<script src="{{ asset('bundles/indicadores/js/FichaTecnicaAdmin/grafico_pastel.js') }}" type="text/javascript"></script>
<script src="{{ asset('bundles/indicadores/js/FichaTecnicaAdmin/grafico_columnas.js') }}" type="text/javascript"></script>
<script src="{{ asset('bundles/indicadores/js/FichaTecnicaAdmin/grafico_lineas.js') }}" type="text/javascript"></script>
<script src="{{ asset('bundles/indicadores/js/FichaTecnicaAdmin/tablero.js') }}" type="text/javascript"></script>
<script src="{{ asset('bundles/indicadores/js/FichaTecnicaAdmin/comun.js') }}" type="text/javascript"></script>
<!--<script src="{{ asset('bundles/indicadores/js/bootstrap/bootstrap.js') }}" type="text/javascript"></script>-->
<script src="{{ asset('bundles/indicadores/js/bootstrap/js/moment.js') }}" type="text/javascript"></script>
<script src="{{ asset('bundles/indicadores/js/bootstrap/js/summernote.js') }}" type="text/javascript"></script>

    <!--EDITADO PARA NUEVOS TIPOS DE GRAFICOS-->
    <script src="{{ asset('bundles/indicadores/js/SVG/rgbcolor.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/indicadores/js/SVG/StackBlur.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/indicadores/js/SVG/canvg.js') }}" type="text/javascript"></script>
    
    <script src="{{ asset('bundles/indicadores/js/FichaTecnicaAdmin/grafico_gauge.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/indicadores/js/FichaTecnicaAdmin/grafico_termometro.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/indicadores/js/FichaTecnicaAdmin/iopctrl.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/indicadores/js/FichaTecnicaAdmin/grafico_mapa.js') }}" type="text/javascript"></script>
	
    <script src="{{ asset('bundles/indicadores/js/bridge_draggable_touch.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/indicadores/js/jquery.ui.touch-punch.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/indicadores/js/rasterizeHTML.allinone.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/indicadores/js/DataTables/jquery.dataTables.min.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/indicadores/js/DataTables/ZeroClipboard.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/indicadores/js/DataTables/TableTools.min.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/indicadores/js/bootstrap/js/bootstrap-datepicker.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/indicadores/js//handsontable/handsontable.full.js') }}" type="text/javascript"></script>
<script>
function JSONToCSVConvertor(JSONData, ReportTitle, ShowLabel) {
    //If JSONData is not an object then JSON.parse will parse the JSON string in an Object
    var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;
    
    var CSV = '';    
    //Set Report title in first row or line
    
    CSV += ReportTitle + '\r\n\n';

    //This condition will generate the Label/Header
    if (ShowLabel) {
        var row = "";
        
        //This loop will extract the label from 1st index of on array
        for (var index in arrData[0]) {
            
            //Now convert each value to string and comma-seprated
            row += index + ',';
        }

        row = row.slice(0, -1);
        
        //append Label row with line break
        CSV += row + '\r\n';
    }
    
    //1st loop is to extract each row
    for (var i = 0; i < arrData.length; i++) {
        var row = "";
        
        //2nd loop will extract each column and convert it in string comma-seprated
        for (var index in arrData[i]) {
            row += '"' + arrData[i][index] + '",';
        }

        row.slice(0, row.length - 1);
        
        //add a line break after each row
        CSV += row + '\r\n';
    }

    if (CSV == '') {        
        alert("Invalid data");
        return;
    }   
    
    //Generate a file name
    var fileName = "MyReport_";
    //this will remove the blank-spaces from the title and replace it with an underscore
    fileName += ReportTitle.replace(/ /g,"_");   
    
    //Initialize file format you want csv or xls
    var uri = 'data:text/csv;charset=utf-8,' + escape(CSV);
    
    // Now the little tricky part.
    // you can use either>> window.open(uri);
    // but this will not work in some browsers
    // or you will not get the correct file extension    
    
    //this trick will generate a temp <a /> tag
    var link = document.createElement("a");    
    link.href = uri;
    
    //set the visibility hidden so it will not effect on your web-layout
    link.style = "visibility:hidden";
    link.download = fileName + ".csv";
    
    //this part will append the anchor tag and remove it after automatic click
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
}
$(document).ready(function(){
    var $container = $("#handsontable");
    container = document.getElementById('handsontable');
    var handsontable = $container.data('handsontable');         
var config = {
    height: 396,
    width:1200,
    minRows: 0,
    minCols: 14,
    minSpareRows: 1,
    autoWrapRow: true,
    colHeaders:["Id","Descripcion","Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sept","Oct","Nov","Dic"],
    currentRowClassName: 'currentRow',
    currentColClassName: 'currentCol',
    contextMenu: {
        items: {
            "row_above": {},
                "row_below": {},
                "hsep1": "---------",
                "col_left": {},
                "col_right": {},
                "hsep2": "---------",
                "remove_row": {},
                "remove_col": {}
        }
    }
};   //data:advancedData,
var hot = new Handsontable(container, {
                                            
                                            height: 396,
                                            width:1200,
                                            colHeaders:["Id","Descripcion","Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sept","Oct","Nov","Dic"],
                                            rowHeaders: true,
                                            stretchH: 'all',
                                            contextMenu: true,
                                            readOnly: false,
                                            columns: [
                                            {data: "id", type: 'numeric', format: '0',readOnly: true, width:50 },  
                                            {data: "descripcion", type: 'text', readOnly: true, width:400},
                                            {data: "ene", type: 'numeric',readOnly: false, width:50 },
                                            {data: "feb", type: 'numeric',readOnly: false, width:50 },
                                            {data: "mar", type: 'numeric',readOnly: false, width:50 },
                                            {data: "abr", type: 'numeric',readOnly: false, width:50 },
                                            {data: "may", type: 'numeric',readOnly: false, width:50 },
                                            {data: "jun", type: 'numeric',readOnly: false, width:50 },
                                            {data: "jul", type: 'numeric',readOnly: false, width:50 },
                                            {data: "ago", type: 'numeric',readOnly: false, width:50 },
                                            {data: "sep", type: 'numeric',readOnly: false, width:50 },
                                            {data: "oct", type: 'numeric',readOnly: false, width:50 },
                                            {data: "nov", type: 'numeric',readOnly: false, width:50 },
                                            {data: "dic", type: 'numeric',readOnly: false, width:50 },
                                            ]
                                            });          
                  

   $('#dated01').datepicker({
        pickTime:false,
        format: "MM-yyyy",
        minViewMode: 1 
    });
	$("#search_").autocomplete({
		source: "{{ path('autoComplete_Indicador') }}",
		select: function (a, b) 
		{
			var valor=b.item.value;
			valor=valor.split("]")[0];
			valor=valor.split("[")[1];	
			sala_agregar_fila(); 								
			recuperarDimensiones(valor, null);
		},
		position: {
			my : "right top",
			at: "right bottom"
		}
	});
	$('#search_').click(function() {
        this.value="";
    });
    //btnGuardar

  $('#btnGuardar').click(function(e) {
    if(confirm("¬øESTA SEGURO DE LOS VALORES INGRESADOS?; NO PODRA RE EDITAR SIN AUTORIZACION")){
    }else{
     return;
   }
    var datos=JSON.stringify(hot.getData());
   
    var fecha= $("#dated01").val().replace(/\//g, '+*)');
    var Est = $("#ddl01").val();
    var param = fecha + "&&" +    
    Est+ "/";
    url="/forns/";
    //alert('url'+url);
    //alert(Est);
    $.ajax({
            type:'POST',
            data: {'datos': hot.getData(),'fecha':fecha, 'est':Est},
        url:url,
            beforeSend: function(){
               $("#lblError").hide();   
            },
             dataType: 'json',
             success:function(data){
         if(data.message== 'false'){
                alert('EL MES SE ENCUENTRA BLOQUEADO, CONTACTAR LA REGION, EN CASO DE REQUERIR CAMBIO');
         }else{
                alert('MES ALMACENADO EXITOSAMENTE, SI REQUIERE CAMBIOS SOLICITARLO A LA REGION.');
            //'scripts/json/save.json', 'GET', JSON.stringify({data: hot.getData()}), function (res) {
            //var response = JSON.parse(res.response);
            }
        }
      //if (response.result === 'ok') {
      //  exampleConsole.innerText = 'Data saved';
      //}
      //else {
      //  exampleConsole.innerText = 'Save error';
      //}
      });
    });  
  


    $("#btnExport").click(function(e) {
        //window.open('data:application/vnd.ms-excel,' + JSON.stringify(hot.getData()));
        var hot2 = hot;
        var data= JSON.stringify(hot2.getData(),["id","descripcion","ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"] );
        JSONToCSVConvertor(data, "Indicadores Establecimientos", true);
        e.preventDefault();
    });


  $('#btnCargar').click(function(e) {
         var fecha= $("#dated01").val().replace(/\//g, '+*)');
         var Est = $("#ddl01").val(); 
         var param = fecha + "&&" +     
	  Est+ "/"; 
           url="/fornp/"+ param;
           //alert('url'+url);
			$.ajax({
                                type:'POST',
				url:url,
                                beforeSend: function(){
				$("#lblError").hide();	
				},
                                dataType: 'json',
				success:function(data){
					if(data.message== 'false'){
                                            //alert('false');
                                            advancedData = [["","","","","","","","","","","","","",""]]; 
                                            //advancedData=data.message;
                                            hot.loadData(advancedData);
                                            $container = document.getElementById('handsontable');
                                            //hot;
                                            //alert(advancedData);
					}else{
                                            advancedData=data.message;
                                            $container = document.getElementById('handsontable');
                                            //alert(data.mes);
                                            var mes= data.mes;
                                            switch(mes){
                                                case '01':

                                            hot.updateSettings({columns: [
                                             {data: "id", type: 'numeric', readOnly: true, width:50, format: '0' },  
                                             {data: "descripcion",type: 'text', readOnly: true, width:400   },
                                             {data: "ene", type: 'numeric',readOnly: false, width:50 },
                                             {data: "feb", type: 'numeric',readOnly: true, width:50 },
                                             {data: "mar", type: 'numeric',readOnly: true, width:50 },
                                             {data: "abr", type: 'numeric',readOnly: true, width:50 },
                                             {data: "may", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jun", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jul", type: 'numeric',readOnly: true, width:50 },
                                             {data: "ago", type: 'numeric',readOnly: true, width:50 },
                                             {data: "sep", type: 'numeric',readOnly: true, width:50 },
                                             {data: "oct", type: 'numeric',readOnly: true, width:50 },
                                             {data: "nov", type: 'numeric',readOnly: true, width:50 },
                                             {data: "dic", type: 'numeric',readOnly: true, width:50 },
                                            ], cells: function (row, col, prop) {
                                                var cellProperties = {};
                                                 var resP = data.message;
                                                    cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {
                                                        Handsontable.cellTypes[cellProperties.type].renderer.apply(this, arguments);
                                                       if (resP[row] != undefined){
                                                          
                                                        if (resP[row]['pintar']==true){
                                                          
                                              
                                                             td.style.backgroundColor= '#ebb3d0';
                                                        }else{
                                                             td.style.backgroundColor= '#ffffff';
                                                        }
                                                    }}
                                                return cellProperties; }
                                            });
                                            break;
                                               case '02':

                                            hot.updateSettings({columns: [
                                             {data: "id", type: 'numeric', readOnly: true, width:50, format: '0' },  
                                             {data: "descripcion",type: 'text', readOnly: true, width:400   },
                                             {data: "ene", type: 'numeric',readOnly: true, width:50 },
                                             {data: "feb", type: 'numeric',readOnly: false, width:50 },
                                             {data: "mar", type: 'numeric',readOnly: true, width:50 },
                                             {data: "abr", type: 'numeric',readOnly: true, width:50 },
                                             {data: "may", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jun", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jul", type: 'numeric',readOnly: true, width:50 },
                                             {data: "ago", type: 'numeric',readOnly: true, width:50 },
                                             {data: "sep", type: 'numeric',readOnly: true, width:50 },
                                             {data: "oct", type: 'numeric',readOnly: true, width:50 },
                                             {data: "nov", type: 'numeric',readOnly: true, width:50 },
                                             {data: "dic", type: 'numeric',readOnly: true, width:50 },
                                            ], cells: function (row, col, prop) {
                                                var cellProperties = {};
                                                 var resP = data.message;
                                                    cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {
                                                        Handsontable.cellTypes[cellProperties.type].renderer.apply(this, arguments);
                                                       if (resP[row] != undefined){
                                                          
                                                        if (resP[row]['pintar']==true){
                                                          
                                              
                                                             td.style.backgroundColor= '#ebb3d0';
                                                        }else{
                                                             td.style.backgroundColor= '#ffffff';
                                                        }
                                                    }}
                                                return cellProperties; }
                                            });
                                            break;
                                               case '03':

                                            hot.updateSettings({columns: [
                                             {data: "id", type: 'numeric', readOnly: true, width:50, format: '0' },  
                                             {data: "descripcion",type: 'text', readOnly: true, width:400   },
                                             {data: "ene", type: 'numeric',readOnly: true, width:50 },
                                             {data: "feb", type: 'numeric',readOnly: true, width:50 },
                                             {data: "mar", type: 'numeric',readOnly: false, width:50 },
                                             {data: "abr", type: 'numeric',readOnly: true, width:50 },
                                             {data: "may", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jun", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jul", type: 'numeric',readOnly: true, width:50 },
                                             {data: "ago", type: 'numeric',readOnly: true, width:50 },
                                             {data: "sep", type: 'numeric',readOnly: true, width:50 },
                                             {data: "oct", type: 'numeric',readOnly: true, width:50 },
                                             {data: "nov", type: 'numeric',readOnly: true, width:50 },
                                             {data: "dic", type: 'numeric',readOnly: true, width:50 },
                                            ], cells: function (row, col, prop) {
                                                var cellProperties = {};
                                                 var resP = data.message;
                                                    cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {
                                                        Handsontable.cellTypes[cellProperties.type].renderer.apply(this, arguments);
                                                       if (resP[row] != undefined){
                                                          
                                                        if (resP[row]['pintar']==true){
                                                          
                                              
                                                             td.style.backgroundColor= '#ebb3d0';
                                                        }else{
                                                             td.style.backgroundColor= '#ffffff';
                                                        }
                                                    }}
                                                return cellProperties; }
                                            });
                                            break; 
                                             case '04':
                                            hot.updateSettings({columns: [
                                             {data: "id", type: 'numeric', readOnly: true, width:50, format: '0' },  
                                             {data: "descripcion",type: 'text', readOnly: true, width:400   },
                                             {data: "ene", type: 'numeric',readOnly: true, width:50 },
                                             {data: "feb", type: 'numeric',readOnly: true, width:50 },
                                             {data: "mar", type: 'numeric',readOnly: true, width:50 },
                                             {data: "abr", type: 'numeric',readOnly: false, width:50 },
                                             {data: "may", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jun", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jul", type: 'numeric',readOnly: true, width:50 },
                                             {data: "ago", type: 'numeric',readOnly: true, width:50 },
                                             {data: "sep", type: 'numeric',readOnly: true, width:50 },
                                             {data: "oct", type: 'numeric',readOnly: true, width:50 },
                                             {data: "nov", type: 'numeric',readOnly: true, width:50 },
                                             {data: "dic", type: 'numeric',readOnly: true, width:50 },
                                            ], cells: function (row, col, prop) {
                                                var cellProperties = {};
                                                 var resP = data.message;
                                                    cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {
                                                        Handsontable.cellTypes[cellProperties.type].renderer.apply(this, arguments);
                                                       if (resP[row] != undefined){
                                                          
                                                        if (resP[row]['pintar']==true){
                                                          
                                              
                                                             td.style.backgroundColor= '#ebb3d0';
                                                        }else{
                                                             td.style.backgroundColor= '#ffffff';
                                                        }
                                                    }}
                                                return cellProperties; }
                                            });
                                            break;
                                              case '05':
                                            hot.updateSettings({columns: [
                                             {data: "id", type: 'numeric', readOnly: true, width:50, format: '0' },  
                                             {data: "descripcion",type: 'text', readOnly: true, width:400   },
                                             {data: "ene", type: 'numeric',readOnly: true, width:50 },
                                             {data: "feb", type: 'numeric',readOnly: true, width:50 },
                                             {data: "mar", type: 'numeric',readOnly: true, width:50 },
                                             {data: "abr", type: 'numeric',readOnly: true, width:50 },
                                             {data: "may", type: 'numeric',readOnly: false, width:50 },
                                             {data: "jun", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jul", type: 'numeric',readOnly: true, width:50 },
                                             {data: "ago", type: 'numeric',readOnly: true, width:50 },
                                             {data: "sep", type: 'numeric',readOnly: true, width:50 },
                                             {data: "oct", type: 'numeric',readOnly: true, width:50 },
                                             {data: "nov", type: 'numeric',readOnly: true, width:50 },
                                             {data: "dic", type: 'numeric',readOnly: true, width:50 },
                                            ], cells: function (row, col, prop) {
                                                var cellProperties = {};
                                                 var resP = data.message;
                                                    cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {
                                                        Handsontable.cellTypes[cellProperties.type].renderer.apply(this, arguments);
                                                       if (resP[row] != undefined){
                                                          
                                                        if (resP[row]['pintar']==true){
                                                          
                                              
                                                             td.style.backgroundColor= '#ebb3d0';
                                                        }else{
                                                             td.style.backgroundColor= '#ffffff';
                                                        }
                                                    }}
                                                return cellProperties; }
                                            });
                                            break;
                                              case '06':
                                            hot.updateSettings({columns: [
                                             {data: "id", type: 'numeric', readOnly: true, width:50, format: '0' },  
                                             {data: "descripcion",type: 'text', readOnly: true, width:400   },
                                             {data: "ene", type: 'numeric',readOnly: true, width:50 },
                                             {data: "feb", type: 'numeric',readOnly: true, width:50 },
                                             {data: "mar", type: 'numeric',readOnly: true, width:50 },
                                             {data: "abr", type: 'numeric',readOnly: true, width:50 },
                                             {data: "may", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jun", type: 'numeric',readOnly: false, width:50 },
                                             {data: "jul", type: 'numeric',readOnly: true, width:50 },
                                             {data: "ago", type: 'numeric',readOnly: true, width:50 },
                                             {data: "sep", type: 'numeric',readOnly: true, width:50 },
                                             {data: "oct", type: 'numeric',readOnly: true, width:50 },
                                             {data: "nov", type: 'numeric',readOnly: true, width:50 },
                                             {data: "dic", type: 'numeric',readOnly: true, width:50 },
                                            ], cells: function (row, col, prop) {
                                                var cellProperties = {};
                                                 var resP = data.message;
                                                    cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {
                                                        Handsontable.cellTypes[cellProperties.type].renderer.apply(this, arguments);
                                                       if (resP[row] != undefined){
                                                          
                                                        if (resP[row]['pintar']==true){
                                                          
                                              
                                                             td.style.backgroundColor= '#ebb3d0';
                                                        }else{
                                                             td.style.backgroundColor= '#ffffff';
                                                        }
                                                    }}
                                                return cellProperties; }
                                            });
                                            break;
                                               case '07':
                                            hot.updateSettings({columns: [
                                             {data: "id", type: 'numeric', readOnly: true, width:50, format: '0' },  
                                             {data: "descripcion",type: 'text', readOnly: true, width:400   },
                                             {data: "ene", type: 'numeric',readOnly: true, width:50 },
                                             {data: "feb", type: 'numeric',readOnly: true, width:50 },
                                             {data: "mar", type: 'numeric',readOnly: true, width:50 },
                                             {data: "abr", type: 'numeric',readOnly: true, width:50 },
                                             {data: "may", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jun", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jul", type: 'numeric',readOnly: false, width:50 },
                                             {data: "ago", type: 'numeric',readOnly: true, width:50 },
                                             {data: "sep", type: 'numeric',readOnly: true, width:50 },
                                             {data: "oct", type: 'numeric',readOnly: true, width:50 },
                                             {data: "nov", type: 'numeric',readOnly: true, width:50 },
                                             {data: "dic", type: 'numeric',readOnly: true, width:50 },
                                            ], cells: function (row, col, prop) {
                                                var cellProperties = {};
                                                 var resP = data.message;
                                                    cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {
                                                        Handsontable.cellTypes[cellProperties.type].renderer.apply(this, arguments);
                                                       if (resP[row] != undefined){
                                                          
                                                        if (resP[row]['pintar']==true){
                                                          
                                              
                                                             td.style.backgroundColor= '#ebb3d0';
                                                        }else{
                                                             td.style.backgroundColor= '#ffffff';
                                                        }
                                                    }}
                                                return cellProperties; }
                                            });
                                            break;
                                               case '08':
                                            hot.updateSettings({columns: [
                                             {data: "id", type: 'numeric', readOnly: true, width:50, format: '0' },  
                                             {data: "descripcion",type: 'text', readOnly: true, width:400   },
                                             {data: "ene", type: 'numeric',readOnly: true, width:50 },
                                             {data: "feb", type: 'numeric',readOnly: true, width:50 },
                                             {data: "mar", type: 'numeric',readOnly: true, width:50 },
                                             {data: "abr", type: 'numeric',readOnly: true, width:50 },
                                             {data: "may", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jun", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jul", type: 'numeric',readOnly: true, width:50 },
                                             {data: "ago", type: 'numeric',readOnly: false, width:50 },
                                             {data: "sep", type: 'numeric',readOnly: true, width:50 },
                                             {data: "oct", type: 'numeric',readOnly: true, width:50 },
                                             {data: "nov", type: 'numeric',readOnly: true, width:50 },
                                             {data: "dic", type: 'numeric',readOnly: true, width:50 },
                                            ], cells: function (row, col, prop) {
                                                var cellProperties = {};
                                                 var resP = data.message;
                                                    cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {
                                                        Handsontable.cellTypes[cellProperties.type].renderer.apply(this, arguments);
                                                       if (resP[row] != undefined){
                                                          
                                                        if (resP[row]['pintar']==true){
                                                          
                                              
                                                             td.style.backgroundColor= '#ebb3d0';
                                                        }else{
                                                             td.style.backgroundColor= '#ffffff';
                                                        }
                                                    }}
                                                return cellProperties; }
                                            });
                                            break;
                                               case '09':
                                            hot.updateSettings({columns: [
                                             {data: "id", type: 'numeric', readOnly: true, width:50, format: '0' },  
                                             {data: "descripcion",type: 'text', readOnly: true, width:400   },
                                             {data: "ene", type: 'numeric',readOnly: true, width:50 },
                                             {data: "feb", type: 'numeric',readOnly: true, width:50 },
                                             {data: "mar", type: 'numeric',readOnly: true, width:50 },
                                             {data: "abr", type: 'numeric',readOnly: true, width:50 },
                                             {data: "may", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jun", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jul", type: 'numeric',readOnly: true, width:50 },
                                             {data: "ago", type: 'numeric',readOnly: true, width:50 },
                                             {data: "sep", type: 'numeric',readOnly: false, width:50 },
                                             {data: "oct", type: 'numeric',readOnly: true, width:50 },
                                             {data: "nov", type: 'numeric',readOnly: true, width:50 },
                                             {data: "dic", type: 'numeric',readOnly: true, width:50 },
                                            ], cells: function (row, col, prop) {
                                                var cellProperties = {};
                                                 var resP = data.message;
                                                    cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {
                                                        Handsontable.cellTypes[cellProperties.type].renderer.apply(this, arguments);
                                                       if (resP[row] != undefined){
                                                          
                                                        if (resP[row]['pintar']==true){
                                                          
                                              
                                                             td.style.backgroundColor= '#ebb3d0';
                                                        }else{
                                                             td.style.backgroundColor= '#ffffff';
                                                        }
                                                    }}
                                                return cellProperties; }
                                            });
                                            break;
                                               case '10':
                                            hot.updateSettings({columns: [
                                             {data: "id", type: 'numeric', readOnly: true, width:50, format: '0' },  
                                             {data: "descripcion",type: 'text', readOnly: true, width:400   },
                                             {data: "ene", type: 'numeric',readOnly: true, width:50 },
                                             {data: "feb", type: 'numeric',readOnly: true, width:50 },
                                             {data: "mar", type: 'numeric',readOnly: true, width:50 },
                                             {data: "abr", type: 'numeric',readOnly: true, width:50 },
                                             {data: "may", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jun", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jul", type: 'numeric',readOnly: true, width:50 },
                                             {data: "ago", type: 'numeric',readOnly: true, width:50 },
                                             {data: "sep", type: 'numeric',readOnly: true, width:50 },
                                             {data: "oct", type: 'numeric',readOnly: false, width:50 },
                                             {data: "nov", type: 'numeric',readOnly: true, width:50 },
                                             {data: "dic", type: 'numeric',readOnly: true, width:50 },
                                            ], cells: function (row, col, prop) {
                                                var cellProperties = {};
                                                 var resP = data.message;
                                                    cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {
                                                        Handsontable.cellTypes[cellProperties.type].renderer.apply(this, arguments);
                                                       if (resP[row] != undefined){
                                                          
                                                        if (resP[row]['pintar']==true){
                                                          
                                              
                                                             td.style.backgroundColor= '#ebb3d0';
                                                        }else{
                                                             td.style.backgroundColor= '#ffffff';
                                                        }
                                                    }}
                                                return cellProperties; }
                                            });
                                            break;
                                               case '11':
                                            hot.updateSettings({columns: [
                                             {data: "id", type: 'numeric', readOnly: true, width:50, format: '0' },  
                                             {data: "descripcion",type: 'text', readOnly: true, width:400   },
                                             {data: "ene", type: 'numeric',readOnly: true, width:50 },
                                             {data: "feb", type: 'numeric',readOnly: true, width:50 },
                                             {data: "mar", type: 'numeric',readOnly: true, width:50 },
                                             {data: "abr", type: 'numeric',readOnly: true, width:50 },
                                             {data: "may", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jun", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jul", type: 'numeric',readOnly: true, width:50 },
                                             {data: "ago", type: 'numeric',readOnly: true, width:50 },
                                             {data: "sep", type: 'numeric',readOnly: true, width:50 },
                                             {data: "oct", type: 'numeric',readOnly: true, width:50 },
                                             {data: "nov", type: 'numeric',readOnly: false, width:50 },
                                             {data: "dic", type: 'numeric',readOnly: true, width:50 },
                                            ], cells: function (row, col, prop) {
                                                var cellProperties = {};
                                                 var resP = data.message;
                                                    cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {
                                                        Handsontable.cellTypes[cellProperties.type].renderer.apply(this, arguments);
                                                       if (resP[row] != undefined){
                                                          
                                                        if (resP[row]['pintar']==true){
                                                          
                                              
                                                             td.style.backgroundColor= '#ebb3d0';
                                                        }else{
                                                             td.style.backgroundColor= '#ffffff';
                                                        }
                                                    }}
                                                return cellProperties; }
                                            });
                                            break;
                                               case '12':
                                            hot.updateSettings({columns: [
                                             {data: "id", type: 'numeric', readOnly: true, width:50, format: '0' },  
                                             {data: "descripcion",type: 'text', readOnly: true, width:400   },
                                             {data: "ene", type: 'numeric',readOnly: true, width:50 },
                                             {data: "feb", type: 'numeric',readOnly: true, width:50 },
                                             {data: "mar", type: 'numeric',readOnly: true, width:50 },
                                             {data: "abr", type: 'numeric',readOnly: true, width:50 },
                                             {data: "may", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jun", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jul", type: 'numeric',readOnly: true, width:50 },
                                             {data: "ago", type: 'numeric',readOnly: true, width:50 },
                                             {data: "sep", type: 'numeric',readOnly: true, width:50 },
                                             {data: "oct", type: 'numeric',readOnly: true, width:50 },
                                             {data: "nov", type: 'numeric',readOnly: true, width:50 },
                                             {data: "dic", type: 'numeric',readOnly: false, width:50 },
                                            ], cells: function (row, col, prop) {
                                                var cellProperties = {};
                                                 var resP = data.message;
                                                    cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {
                                                        Handsontable.cellTypes[cellProperties.type].renderer.apply(this, arguments);
                                                       if (resP[row] != undefined){
                                                          
                                                        if (resP[row]['pintar']==true){
                                                          
                                              
                                                             td.style.backgroundColor= '#ebb3d0';
                                                        }else{
                                                             td.style.backgroundColor= '#ffffff';
                                                        }
                                                    }}
                                                return cellProperties; }
                                            });
                                            break;
                                            default:
                                            
                                            hot.updateSettings({columns: [
                                             {data: "id", type: 'numeric', readOnly: true, width:50, format: '0' },  
                                             {data: "descripcion",type: 'text', readOnly: true, width:400   },
                                             {data: "ene", type: 'numeric',readOnly: true, width:50 },
                                             {data: "feb", type: 'numeric',readOnly: true, width:50 },
                                             {data: "mar", type: 'numeric',readOnly: true, width:50 },
                                             {data: "abr", type: 'numeric',readOnly: true, width:50 },
                                             {data: "may", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jun", type: 'numeric',readOnly: true, width:50 },
                                             {data: "jul", type: 'numeric',readOnly: true, width:50 },
                                             {data: "ago", type: 'numeric',readOnly: true, width:50 },
                                             {data: "sep", type: 'numeric',readOnly: true, width:50 },
                                             {data: "oct", type: 'numeric',readOnly: true, width:50 },
                                             {data: "nov", type: 'numeric',readOnly: true, width:50 },
                                             {data: "dic", type: 'numeric',readOnly: true, width:50 },
                                            ], cells: function (row, col, prop) {
                                                var cellProperties = {};
                                                 var resP = data.message;
                                                    cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {
                                                        Handsontable.cellTypes[cellProperties.type].renderer.apply(this, arguments);
                                                       if (resP[row] != undefined){
                                                          
                                                        if (resP[row]['pintar']==true){
                                                          
                                              
                                                             td.style.backgroundColor= '#ebb3d0';
                                                        }else{
                                                             td.style.backgroundColor= '#ffffff';
                                                        }
                                                    }}
                                                return cellProperties; }
                                            });
                                            break;
                                           }
                                            hot.loadData(advancedData);
						
                                            
                                            
                                            
                                           
                      }
                  }
              });
          });
          //$("#handsontable").handsontable(hot);
	
//LLENADO MUNICIPIO
        $('#ddl03').change(function(e) {
          e.preventDefault(); 
                        var param =  "'"+$("#ddl03").val()+"'/";
                        url="/buscarMunicipio/" + param;
                         //url="/sigep/web/app_dev.php/catdepartamento/buscarMunicipio/" + param;
			$.ajax({
                                type:'POST',
				url:url,
                                beforeSend: function(){
				$("#lblError").hide();	
				},
                                dataType: 'json',
				success:function(data){
					if(data.message === 'false'){
                                            alert('false');
					}else{
                                             var ejercicio = "";//<option value=' '> --OPCI√É‚ÄúN-- </option>
                                             var valorInicial = "<option value=' '> --OPCI√É‚ÄúN-- </option>";
                                             $.each(data, function(i) {
                                              ejercicio = ejercicio + "<option value='"+data[i].id+"'>"+data[i].codigo+ " - "+data[i].nombre+ "</option>";  
                                              });
                                              $('#ddl02').html(ejercicio);
                                              //$('#ddl03').html(valorInicial);
                                              //$('#ddl04').html(valorInicial);
                                        }
				}
			});
        });
        //LLENADO ESTABLECIMIENTO
        $('#ddl02').change(function(e) {
          e.preventDefault(); 
                        var param =  "'"+$("#ddl02").val()+"'/";
                        //alert(param);
                        url="/bEstablecimientoU/" + param;
                         //url="/sigep/web/app_dev.php/catdepartamento/buscarMunicipio/" + param;
			$.ajax({
                                type:'POST',
				url:url,
                                beforeSend: function(){
				$("#lblError").hide();	
				},
                                dataType: 'json',
				success:function(data){
					if(data.message === 'false'){
                                            alert('false');
					}else{
                                             var ejercicio = "";
                                             var valorInicial = "<option value=' '> --OPCI√É‚ÄúN-- </option>";
                                             $.each(data, function(i) {
                                              ejercicio = ejercicio + "<option value='"+data[i].id+"'>"+data[i].id+ " - "+data[i].nombre+ "</option>";  
                                              });
                                              //alert(ejercicio);
                                              $('#ddl01').html(ejercicio);
                                              //$('#ddl03').html(valorInicial);
                                              //$('#ddl04').html(valorInicial);
                                        }
				}
			});
        });




});



</script>
<style>
.ui-autocomplete { max-height: 200px; overflow:visible; z-index:999999999}
</style>
{% endblock %}

{% block content %}

<div id="contenedor_tablero">
    <div class="row" id="titulo_header" >
    	<div class="col-md-12">
	    <div class="page-header" ><h2 id="header_sala">Capturas de Datos Gestores</h2></div> 
        </div>
    </div>
    <div>

        <table border="1" style='width: 90%;'>
            {% if usuarioPermitido == true %}
           <tr>
                <td style="width: 15%;">
                    <center><label >Departamento:</label></center>
               </td>
                <td style="width: 35%;">
                    <select style="width: 95%; class='form-control' text-transform:uppercase; margin-bottom: 10px;" name="ddl03" id="ddl03" >  
                         <option value="0">-- SELECCIONE VALOR--</option> 
                           {% for entity in departamento %}
                        <option value="{{ entity.id}}"> {{entity.nombre}}</option>
                    {% endfor%}
                    </select>
                </td>
                <td colspan="2">
                </td>
            </tr>
            <tr>
                <td>
                    <center><label >Municipio:</label></center>
                </td>
                <td>
                    <select style="width: 95%; class='form-control' text-transform:uppercase; margin-bottom: 10px;" name="ddl02" id="ddl02" >  
                         <option value="0">-- SELECCIONE VALOR--</option> 
                          {% for entity in establecimiento %}
                                    <option value="{{ entity.idEstablecimiento}}"> {{entity.descripcion}}</option>
                               {% endfor%}
                    </select>
                </td>
                <td style="width: 15%;">
                </td>
		<td style="width: 35%;">
                </td>
            </tr>
           
            <tr>
                <td>
                    <center><label >Establecimientos:</label></center>
                </td>
                <td>
                    <select style="width: 95%; class='form-control' text-transform:uppercase; margin-bottom: 10px;" name="ddl01" id="ddl01" >  
                         <option value="0">-- SELECCIONE VALOR--</option> 
                          
                    </select>
                </td>
                <td>
                    <center><label >Fecha:</label></center>
                </td>
                <td>
                    <div class='input-group date' id='dated201' name='dated201'>
                              <input type='text' class='form-control' id='dated01' name='dated01'>
                              <span class='input-group-addon'><span class='glyphicon glyphicon-calendar'></span>
                              </span>
                          </div>
                </td>
            </tr>
         {% endif%}
          {% if usuarioPermitido == false %}
          <tr>
                <td style="width: 15%;" >
                    <center><label >Establecimientos:</label></center>
                </td>
                <td style="width: 35%;">
                    <select class='form-control' style="width: 95%; text-transform:uppercase; margin-bottom: 10px;" name="ddl01" id="ddl01" >  
                         <option value="0">-- SELECCIONE VALOR--</option> 
                          {% for entity in establecimiento %}
                                    <option value="{{ entity.idEstablecimiento}}"> {{entity.descripcion}}</option>
                               {% endfor%}
                    </select>
                </td>
                <td style="width: 15%;">
                    <center><label >Fecha:</label></center>
                </td>
                <td style="width: 35%;">
                    <div class='input-group date' id='dated201' name='dated201' >
                              <input type='text' class='form-control' id='dated01' name='dated01'>
                              <span class='input-group-addon'><span class='glyphicon glyphicon-calendar'></span>
                              </span>
                          </div>
                </td>
            </tr>
         {% endif%}
        </table>                
    </div>
                             
                               <div class="collapse navbar-collapse" id="collapseTwo">
                                   <a class="btn dropdown-toggle btn-primary navbar-btn" id='btnCargar' name='btnCargar' >
                                       <i class="glyphicon glyphicon-cloud-download"></i> <span class="hidden-xs">Cargar</span>
                                   </a>
                                    <a class="btn dropdown-toggle btn-primary navbar-btn" id='btnGuardar' name='btnGuardar' >
                                       <i class=" glyphicon glyphicon-floppy-disk"></i> <span class="hidden-xs">Guardar</span>
                                   </a>
                                    <a href="{{ path('_inicio') }}forn" class="btn dropdown-toggle btn-primary navbar-btn"  id='btnExport' name='btnExport'>
                                       <i class="glyphicon glyphicon-open"></i> <span class="hidden-xs">Exportar</span>
                                   </a>
                               </div>
                                 <span class="hidden-xs"> *Campos ROSADOS son de Clinica Materno Infantil </span>
				  </br></br></br></br></br>
                                       <div id="handsontable" name="handsontable" class="handsontable" style="width: 90%;">
                                           
                                           
                                       </div>
                               <div id="sala" ></div>
</div>

<!-- Modal -->

<div id="myModal" class="modal fade" style="z-index:999999999">
  <div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">√ó</button>
            <h3 id="myModalLabel">{{'_sala_situacional_'|trans}}</h3>
        </div>
    
        <div class="modal-body">
            <label for="nombre_sala">{{'_nombre_sala_'|trans}}</label>
            <textarea id='nombre_sala' id-sala='' rows="3" style="width: 100%" class="form-control"></textarea>
            <span class='alert' id='info_sala'></span>
        </div>
    
        <div class="modal-footer">
            <button id='elimina_sala' class="btn btn-danger" style="display:none">
            <i class="glyphicon glyphicon-minus"></i> 
            {{'_eliminar_cambios_'|trans}}</button>
            
            <button id='guardar_sala' class="btn btn-primary">
            <i class="glyphicon glyphicon-ok"></i> 
            {{'_guardar_cambios_'|trans}}</button>
            
            <button class="btn btn-warning" data-dismiss="modal" aria-hidden="true">
            {{'_cerrar_'|trans}}</button>
        </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div id="myModal2" class="modal fade" style="z-index:999999999">
  <div class="modal-dialog">
    <div class="modal-content">
       <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">√ó</button>
        <h4 id="myModalLabel2"></h4>
    	</div>
        <div class="modal-body" style="max-height:400px; max-width:100%; overflow:auto;">
        <span class='info' id='sql'></span>
        </div>
        <div class="modal-footer">
        <button class="btn btn-warning" data-dismiss="modal" aria-hidden="true">{{'_cerrar_'|trans}}</button>
        </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->




<!-- Modal Menu-->  
<div id="myModalMenu" class="modal fade" style="z-index:99999999">
  <div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">x</button>
            <h4 class="modal-tilte">{{"_Titulo_indicador"|trans}} </h4>
        </div>
        <div class="modal-body">
        
            <ul class="nav nav-tabs">
                <li class="active">
                <a href="#s53beb59d6d27d_1" data-toggle="tab">
                <i class="glyphicon glyphicon-exclamation-sign has-errors hide" data-original-title="" title=""></i>
                {{"_agregar_filtro_"|trans}} ({{clasificacionUso|length}})
                </a>
                </li>
                <li>
                <a href="#s53beb59d6d27d_2" data-toggle="tab">
                <i class="glyphicon glyphicon-exclamation-sign has-errors hide" data-original-title="" title=""></i>
                <i class="glyphicon glyphicon-star"></i> 
                {{"favoritos"|trans}} (<span id='cantidad_favoritos'>{{app.user.favoritos|length}}</span>)
                </a>
                </li>
            </ul>
            <div class="tab-content">
            	<div class="tab-pane active" id="s53beb59d6d27d_1">
                	
                    <div class="col-lg-12"><br />
                        <div class="form-group">
                            <label for="s53beb59d6d27d_establecimiento">
                            {{'clasificacion_uso-eTAB'|trans}}
                            </label>
                            <select class="form-control" id="clasificacion_00">
                            <option value="xxx">
                                {{"_no_clasificados_"|trans}} (<span id='cantidad_no_clasificados'>{{indicadores_no_clasificados|length}})
                            </option>
                            {% for clasificacion in clasificacionUso %}
                                {% if clasificacion.codigo == app.user.clasificacionUso.codigo|default('') %}
                                <option value="{{clasificacion.id}}">
                                     {{clasificacion.descripcion}}
                                    {% for categoria in categorias%}
                                        {% if categoria.indicadores|length > 0 and categoria.cat.descripcion==clasificacion.descripcion   %}
                                            ({{categoria.indicadores|length}})
                                        {% endif %}
                                    {% endfor %}
                                </option>
                                {% else %}
                                <option value="{{clasificacion.id}}" >
                                    {{clasificacion.descripcion}}                                        
                                </option>
                                {% endif %}
                            {% endfor %}
                           </select>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="form-group">
                            <label for="s53beb59d6d27d_establecimiento">
                            {{'clasificacion_tecnica'|trans}}
                            </label>
                            <select class="form-control" id="clasificacion_11">
                            
                           </select>
                        </div>
                    </div>
                
                    <div class="col-lg-12">
                        <div class="input-group">
                          <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>
                          <input type="text" id="search_1" class="form-control" placeholder="Buscar..." autocomplete="off">
                        </div>
                        <br />
                    </div>
                    
                    <div class="col-lg-12">
                    	<ul id="miclasificacion" class="list-group" >
                            {% for indicador in indicadores_no_clasificados %}
                            
                                <li class='list-group-item'
                                     style="height:100%; width:100%; display:block;">
                                    <button type="button" class="indicador pull-left btn" style="margin-right:15px" data-id='{{indicador.id}}'
                                    data-unidad-medida='{{indicador.unidadMedida}}' id='{{indicador.id}}'>
                                    <i class="glyphicon glyphicon-plus"></i>
                                    </button>
                                    {{indicador.nombre}}  <div class="clearfix"></div>                                  
                                </li>
                            
                            {% endfor %}
                        </ul>
                    </div>
                </div>
                <div class="tab-pane" id="s53beb59d6d27d_2">
                	<div class="col-lg-12"><br />
                    	<div class="input-group">
                          <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>
                          <input type="text" id="search_2" class="form-control"  placeholder="Buscar...">
                        </div> 
                        <br />                       
                    </div>
                    <div class="col-lg-12">
                        <ul class="list-group" id='listado-favoritos' >
                            {% for indicador in app.user.favoritos %}
                            	
                            	<li class='list-group-item'
                                     style="height:100%; width:100%; display:block;">
                                    <button type="button" class="indicador pull-left btn" style="margin-right:15px" data-id='{{indicador.id}}'
                                    data-unidad-medida='{{indicador.unidadMedida}}' id='fav-{{indicador.id}}'>
                                    <i class="glyphicon glyphicon-plus"></i>
                                    </button>
                                    {{indicador.nombre}}
                                </li>
                            {% endfor %}
                        </ul>
                    </div>
                </div>
            </div>
        <!-- fin body -->        
    	</div>
        <div class="modal-footer" style="margin-top:-20px">
            <button class="btn btn-warning" data-dismiss="modal" aria-hidden="true">{{'_cerrar_'|trans}}</button>
        </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->




<!-- Modal Salas-->  
<div id="myModalSalas" class="modal fade" style="z-index:99999999">
  <div class="modal-dialog">
    <div class="modal-content">
    	<div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-hidden="true">x</button><h4 class="modal-tilte">{{'_salas_'|trans}} </h4></div>
        <div class="modal-body">
            <div class="tab-content">
                <ul class="nav nav-tabs" id="salax">
                    <li class="active">
                    <a href="#salas_2" data-toggle="tab">
                    <i class="glyphicon glyphicon-exclamation-sign has-errors hide" data-original-title="" title=""></i>
                    Mis {{'_salas_'|trans}} ({{salasXusuario|length}})
                    </a>
                    </li>
                    <li>
                    <a href="#salas_3" data-toggle="tab">
                    <i class="glyphicon glyphicon-exclamation-sign has-errors hide" data-original-title="" title=""></i>
                    {{'_salas_'|trans}} X Grupo ({{salasXgrupo|length}})
                    </a>
                    </li>
                    <li>
                    <a href="#salas_1" data-toggle="tab">
                    <i class="glyphicon glyphicon-exclamation-sign has-errors hide" data-original-title="" title=""></i>
                    {{'_salas_'|trans}} ({{salas|length}})
                    </a>
                    </li>
                </ul>
            
                <div class="tab-content">
                    <div class="tab-pane  active" id="salas_1">
                        <div class="col-lg-12"><br />
                            <div class="input-group">
                              <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>
                              <input type="text" id="search_3" class="form-control"  placeholder="Buscar...">
                            </div> 
                            <br />                       
                        </div>
                        <div class="col-lg-12">
                            <ul class="list-group" id="misalax">                                    
                                {% for sala in salas %}
                                    <li  class="list-group-item" style="min-height:55px" id="n_{{sala.datos_sala.id}}">
                                        <button type="button" class="salas-id pull-left btn" style="margin-right:15px" data="{{sala.indicadores_sala|json_encode()}}" id='a_{{sala.datos_sala.id}}' sala-nombre='{{sala.datos_sala.nombre}}' sala-id='{{sala.datos_sala.id}}'>
                                        <i class="glyphicon glyphicon-plus"></i>
                                        </button>
                                        {{sala.datos_sala.nombre}}
                                                                                
                                    </li>
                                {% endfor %}
                            </ul>                                   
                      </div>
                  </div>
                  <div class="tab-pane" id="salas_2">
                       <div class="col-lg-12"><br />
                            <div class="input-group">
                              <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>
                              <input type="text" id="search_4" class="form-control"  placeholder="Buscar...">
                            </div> 
                            <span class='col-lg-12 alert' style="display:none" id='info_sala2'></span>
                            <br />                       
                      </div>
                      <div class="col-lg-12">
                        <ul class="list-group" id='misalax2' >
                            {% for sala in salasXusuario %}
                                <li  class="list-group-item" style="min-height:55px" id="u_{{sala.datos_sala.id}}">
                                	<button type="button" class="salas-id pull-left btn" style="margin-right:15px" data="{{sala.indicadores_sala|json_encode()}}" id='b_{{sala.datos_sala.id}}' sala-nombre='{{sala.datos_sala.nombre}}' sala-id='{{sala.datos_sala.id}}'>
                                        <i class="glyphicon glyphicon-plus"></i>
                                    </button>
                                    {{sala.datos_sala.nombre}}
                                    
                                    <a href="#myModal" onclick="openModalSala('{{sala.datos_sala.id}}','{{sala.datos_sala.nombre}}','0')" data-toggle="modal" class="btn btn-danger pull-right">
                                        <i class="fa fa-minus"></i> 
                                    </a>
                                    <a href="#myModal" onclick="openModalSala('{{sala.datos_sala.id}}','{{sala.datos_sala.nombre}}','1')"data-toggle="modal" class="btn btn-info pull-right" >
                                        <i class="fa fa-edit"></i> 
                                    </a>
                                    
                                </li>
                            {% endfor %}
                        </ul>
                     </div>                 
                  </div>
                  
                  
                  <div class="tab-pane" id="salas_3">
                     <div class="col-lg-12"><br />
                        <div class="input-group">
                          <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>
                          <input type="text" id="search_5" class="form-control"  placeholder="Buscar...">
                        </div> 
                        <br />                       
                     </div>
                     <div class="col-lg-12">
                        <ul class="list-group" id='misalax3' >                        	
                            {% for sala in salasXgrupo %}
                                <li class="list-group-item" style="min-height:55px" id="g_{{sala.datos_sala.id}}">
                                	<button type="button" class="salas-id pull-left btn" style="margin-right:15px" data="{{sala.indicadores_sala|json_encode()}}" id='c_{{sala.datos_sala.id}}' sala-nombre='{{sala.datos_sala.nombre}}' sala-id='{{sala.datos_sala.id}}'>
                                        <i class="glyphicon glyphicon-plus"></i>
                                    </button>
                                    {{sala.datos_sala.nombre}}
                                </li>
                            {% endfor %}
                        </ul>
                     </div>
                  </div>
              </div>
           </div>
    	</div>
        <div class="modal-footer" style="margin-top:-20px">
            <button class="btn btn-warning" data-dismiss="modal" aria-hidden="true">{{'_cerrar_'|trans}}</button>
        </div>
        
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<style>
#myModalMenu li, #myModalSalas li
{
	cursor:pointer;
}
#myModalMenu li:hover, #myModalSalas li:hover
{
	cursor:pointer;
	background-color:#EBEBEB;	
}
#myModalMenu a , #myModalSalas a
{
	text-decoration:none;
}
</style>
<script>
$(document).ready(function(){
								
	$("#search_1").keyup(function(e) {   
		valor=this.value.toLowerCase();                                                                
		$('#miclasificacion').find('li').each(function(i,ele)
		{			
			var buscar=" "+$.trim($(ele).text().toLowerCase());																								
			if(buscar.indexOf(valor)<1)
				$("#miclasificacion li:nth-child("+(i+1)+")").attr("style","display:none");
			else 
				$("#miclasificacion li:nth-child("+(i+1)+")").removeAttr("style");
			if(valor=="")										
				$("#miclasificacion li:nth-child("+(i+1)+")").removeAttr("style");
		});
	});	
	$("#clasificacion_00").change(function(e) {
		var uso=$(this).val();
		var valor=this.value.toLowerCase();	
		che="";
		if(valor=="xxx")
		{
			valor=$("#clasificacion_00 option:nth-child(2)").val();								
			indicadoresList(valor,"che","");
			$("#clasificacion_11").html("");
		}
		else
		{
			$("#miclasificacion").html("");
			$.ajax({
				url: Routing.generate("clasificacionTecnica",{'uso':uso,'ficha':"x"}),
				dataType:"json",	
				type: 'POST',
				error: function() 
				{
					$("#clasificacion_11").html(li);
				},
				success: function(result) 
				{
					var li="<option value=''>Seleccione</option>";
					for (i = 0; i < result.length; i++) 
					{
						li+='<option value="'+result[i].id+'" >'+result[i].value+'</option>';
					}
					$("#clasificacion_11").html(li);				
				}
			});
			indicadoresList(valor,"","");
		}
	});
	$("#clasificacion_11").change(function(e) {		
		indicadoresList($("#clasificacion_00").val(),"",$(this).val());
	});	
	
	$("#search_5").keyup(function(e) {   
		valor=this.value.toLowerCase();                                                                
		$('#misalax3').find('li').each(function(i,ele)
		{			
			var buscar=" "+$.trim($(ele).text().toLowerCase());																								
			if(buscar.indexOf(valor)<1)
				$("#misalax3 li:nth-child("+(i+1)+")").attr("style","display:none");
			else 
				$("#misalax3 li:nth-child("+(i+1)+")").removeAttr("style");
			if(valor=="")										
				$("#misalax3 li:nth-child("+(i+1)+")").removeAttr("style");
		});
	});		
	
								
	$("#search_4").keyup(function(e) {   
		valor=this.value.toLowerCase();                                                                
		$('#misalax2').find('li').each(function(i,ele)
		{			
			var buscar=" "+$.trim($(ele).text().toLowerCase());																								
			if(buscar.indexOf(valor)<1)
				$("#misalax2 li:nth-child("+(i+1)+")").attr("style","display:none");
			else 
				$("#misalax2 li:nth-child("+(i+1)+")").removeAttr("style");
			if(valor=="")										
				$("#misalax2 li:nth-child("+(i+1)+")").removeAttr("style");
		});
	});	
	
	$("#search_3").keyup(function(e) {   
		valor=this.value.toLowerCase();                                                                
		$('#misalax').find('li').each(function(i,ele)
		{			
			var buscar=" "+$.trim($(ele).text().toLowerCase());																								
			if(buscar.indexOf(valor)<1)
				$("#misalax li:nth-child("+(i+1)+")").attr("style","display:none");
			else 
				$("#misalax li:nth-child("+(i+1)+")").removeAttr("style");
			if(valor=="")										
				$("#misalax li:nth-child("+(i+1)+")").removeAttr("style");
		});
	});	
	
	$("#search_2").keyup(function(e) {   
		valor=this.value.toLowerCase();                                                                
		$('#listado-favoritos').find('li').each(function(i,ele)
		{			
			var buscar=" "+$.trim($(ele).text().toLowerCase());																								
			if(buscar.indexOf(valor)<1)
				$("#listado-favoritos li:nth-child("+(i+1)+")").attr("style","display:none");
			else 
				$("#listado-favoritos li:nth-child("+(i+1)+")").removeAttr("style");
			if(valor=="")										
				$("#listado-favoritos li:nth-child("+(i+1)+")").removeAttr("style");
		});
	});	
	function maximizar()
	{	
		var tam=(($(window).width())-150)/3;
		if((($(window).width())-120)<300)
			tam=($(window).width());
		if(tam<350&&tam>300)
			tam=(($(window).width())-150)/2;
		if(tam>400)
			tam=410;
		
		var h1=tam/1.64;
		var h2=tam/1.07;
			
		//$('.grafico').css({height:h1 , width: h2});
		//$('.area_grafico').css({height:tam , width: tam});
		
		var windowH = $(window).height();
		$('#listado-favoritos').css({'max-height':($(window).height()/2.5)+'px'});
		$('#listado-favoritos').css({'min-height':'70px'});
		$('#listado-favoritos').css({'overflow':'auto'});
		
		$('#miclasificacion').css({'max-height':($(window).height()/2.5)+'px'});
		$('#miclasificacion').css({'min-height':'70px'});
		$('#miclasificacion').css({'overflow':'auto'});
		
		$('#misalax').css({'max-height':($(window).height()/2.5)+'px'});
		$('#misalax').css({'min-height':'70px'});
		$('#misalax').css({'overflow':'auto'});
		
		$('#misalax2').css({'max-height':($(window).height()/2.5)+'px'});
		$('#misalax2').css({'min-height':'70px'});
		$('#misalax2').css({'overflow':'auto'});
		
		$('#misalax3').css({'max-height':($(window).height()/2.5)+'px'});
		$('#misalax3').css({'min-height':'70px'});
		$('#misalax3').css({'overflow':'auto'});
	}
	window.onresize=maximizar;
	window.onload=maximizar;
});
function openModalSala(sala,titulo,edit)
{
	$('#nombre_sala').attr('id-sala', sala);
	$('#nombre_sala').val(titulo);
	if(edit=="0")
	{
		$("#elimina_sala").attr("data-id",sala);
		$("#guardar_sala").attr("style","display:none");
		$("#elimina_sala").attr("style","display:");
	}
	else
	{		
		$("#guardar_sala").attr("style","display:");
		$("#elimina_sala").attr("style","display:none");
	}
}
function indicadoresList(valor,che,ft)
{
	$("#miclasificacion").html("");
	
	$.ajax({
		type: "POST",
		dataType:"JSON",								
		url:(Routing.generate("change_clasificacion_uso",{codigo_clasificacion:valor})),
		data:{ajax:"ajax",che:che,ft:ft},
		success: function(datos) 
		{
			var li="";
			for(var c=0;c<datos.length; c++)
			{
				li=li+'<li class="list-group-item" style="height:100%; width:100%; display:block;">'+
				'<button type="button" class="indicador pull-left btn" style="margin-right:15px" data-id="'+datos[c].id+'"'+
				'onclick="cargar_indicador('+datos[c].id+');" id="'+datos[c].id+'">'+
				'<i class="glyphicon glyphicon-plus"></i>'+
				'</button>'+datos[c].nombre+'<div class="clearfix"></div></li>';										
			}
			if(li=="")
				li="<div class='alert alert-warning col-lg-12'>No hay resultados</div>";					
			$("#miclasificacion").append(li);
			marcar_agregados();
		}
	});
}
acciones_button();
</script>

{% endblock %}
